ATM_supply_caches = {
	ATM_get_supply_cache = {
		visible = {
			has_war_with = BBW
		}
		target_array = city_lodz
		state_target = yes
		target_trigger = {
			FROM = {
				is_controlled_by = ROOT
			}
		}
		cost = 10
		fire_only_once = yes
		days_remove = 7
		remove_effect = {
			add_fuel = 1000
			add_equipment_to_stockpile = {
				type = melee_equipment
				amount = 100
				producer = BBW
			}
			add_equipment_to_stockpile = {
				type = ranged_equipment
				amount = 50
				producer = BBW
			}
			add_equipment_to_stockpile = {
				type = inf_anti_tank_equipment_0
				amount = 100
				producer = BBW
			}
			random_list = {
				1 = {
					add_fuel = 1000
					add_equipment_to_stockpile = {
						type = melee_equipment
						amount = 100
						producer = BBW
					}
					add_equipment_to_stockpile = {
						type = ranged_equipment
						amount = 50
						producer = BBW
					}
					add_equipment_to_stockpile = {
						type = inf_anti_tank_equipment_0
						amount = 100
						producer = BBW
					}
				}
				1 = {}
			}
		}
	}
}

ATM_emergency_workshops = {
	ATM_setup_workshop = {
		visible = {
			has_war_with = BBW
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = "Setup workshops in 5 states"
				check_variable = {
					emergency_workshops < 5
				}
			}
		}
		target_array = ROOT.controlled_states
		state_target = yes
		target_trigger = {
			FROM = {
				is_controlled_by = ROOT
			}
		}
		cost = 10
		fire_only_once = yes
		days_remove = 14
		complete_effect = {
			add_to_variable = {
				emergency_workshops = 1
			}
		}
		cancel_trigger = {
			FROM = {
				not = {
					is_controlled_by = ROOT
				}
			}
		}
		cancel_effect = {
			subtract_from_variable = {
				emergency_workshops = 1
			}
		}
		remove_effect = {
			add_offsite_building = {
				type = arms_factory
				level = 1
			}
		}
	}
}

ATM_convoy_raids = {
	ATM_raid_enemy_depots = {
		visible = {
			has_war_with = BBW
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = "Raid is not in progress"
				not = {
					has_country_flag = raid_in_progress
				}
			}
		}
		target_array = BBW.controlled_states
		state_target = yes
		target_trigger = {
			FROM = {
				is_controlled_by = BBW
			}
		}
		cost = 10
		fire_only_once = yes
		days_remove = 21
		complete_effect = {
			set_country_flag = raid_in_progress
			add_manpower = -50
			add_equipment_to_stockpile = {
				type = ranged_equipment
				amount = -25
			}
			add_equipment_to_stockpile = {
				type = melee_equipment
				amount = -25
			}
		}
		cancel_trigger = {
			FROM = {
				not = {
					is_controlled_by = BBW
				}
			}
		}
		cancel_effect = {
			clr_country_flag = raid_in_progress
			add_manpower = 25
			add_equipment_to_stockpile = {
				type = ranged_equipment
				amount = 20
			}
			add_equipment_to_stockpile = {
				type = melee_equipment
				amount = 5
			}
		}
		remove_effect = {
			clr_country_flag = raid_in_progress
			custom_effect_tooltip = "We will sabotage enemy supply depots"
			hidden_effect = {
				FROM = {
					add_dynamic_modifier = {
						modifier = ATM_whacked_supply
						days = 90
					}
				}
			}
		}
	}
}

ATM_nuclear_plant = {
	ATM_shutdown_coal_power_plant = {
		visible = {
			any_owned_state = {
				power_plant > 0
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = "Did not have energy deficit"
				check_variable = {
					current_balance > 0
				}
			}
		}
		cost = 20
		days_remove = 30
		remove_effect = {
			random_owned_state = {
				limit = {
					power_plant > 0
				}
				remove_building = {
					type = power_plant
					level = 1
				}
			}
		}
	}
	ATM_sudety_extraction = {
		available = {
			always = no
		}
		activation = {
			always = no
		}
		days_mission_timeout = 365
		timeout_effect = {
			if = {
				limit = {
					not = {
						has_variable = ATM_sudety_reps 
					}
				}
				set_variable = {ATM_sudety_reps = 1}
			}
			else = {
				set_variable = {ATM_additional_uranium_sudety = 10}
				multiply_variable = {ATM_additional_uranium_sudety  = ATM_sudety_reps }
				subtract_from_variable = { ATM_uranium_sudety = ATM_additional_uranium_sudety }
				add_to_variable = { ATM_usable_uranium = ATM_additional_uranium_sudety }
				if = {
					limit = {
						check_variable = { ATM_sudety_reps < 5 }
					}
					add_to_variable = {ATM_sudety_reps = 1}
				}
			}
			subtract_from_variable = { ATM_uranium_sudety = 50 }
			add_to_variable = { ATM_usable_uranium = 50 }
			if = {
				limit = {
					check_variable = {
						var = ATM_uranium_sudety
						value = 0
						compare = less_than_or_equals
					}
				}
				clr_country_flag = ATM_sudety_deposits_avaiable
			}
			else = {
				activate_mission = ATM_sudety_extraction
			}
			ATM_refresh_deposit_loc = YES
		}
	}
}
