get_taxes = {
	set_variable = {
		tax = max_manpower_k #w tys. żeby się nie przelało
	}
	multiply_variable = {
		tax = 450
	}
	round_variable = tax
	multiply_variable = {
		tax = 0.015 # podzielone przez 1M żeby się nie przelało
	}
	set_temp_variable = {
		tax_rate_multiplier = 1
	}
	add_to_temp_variable = {
		tax_rate_multiplier = modifier@tax_rate
	}
	multiply_variable = {
		tax = tax_rate_multiplier
	}
	set_variable = {
		monthly_tax = tax
	}
	divide_variable = {
		monthly_tax = 12
	}
	# if = {
	# 	limit = {
	# 		tag = SLE
	# 	}
	# 	log = "U hnesza jest [?tax]M moniaków"
	# }
	get_netto = yes
	get_building_cost = yes
}

get_netto = {
	set_variable = {
		budget = 1
	}
	set_variable = {
		monthly_budget_spendings = tax
	}
	multiply_variable = {
		monthly_budget_spendings = modifier@budget_spendings
	}
	divide_variable = {
		monthly_budget_spendings = 12
	}
	subtract_from_variable = {
		budget = modifier@budget_spendings
	}
	multiply_variable = {
		budget = tax
	}
	get_consumer_payments = yes
}

get_consumer_payments = {
	#wiedząc że utrzymanie fabryki kosztuje 1mln, można to pominąć co opłaty daje nam liczba_fabryk * (1+socjal+ekonomia)
	set_temp_variable = {
		consumer_payments = 1
	}
	add_to_temp_variable = {
		consumer_payments = modifier@consumer_goods_expected_value
	}
	if = {
		limit = {
			has_idea = basic_income 
		}
		add_to_temp_variable = {
			consumer_payments = 0.08
		}
	}
	else_if = {
		limit = { 
			or = {
				has_idea = civil_industry_subsidies
				has_idea = military_industry_subsidies
			}
		}
		add_to_temp_variable = {
			consumer_payments = 0.035
		}
	}
	multiply_temp_variable = {
		consumer_payments = num_of_civilian_factories
	}
	set_variable = {
		monthly_consumer_payments = consumer_payments
	}
	divide_variable = {
		monthly_consumer_payments = 12
	}
	subtract_from_variable = {
		budget = consumer_payments
	}
	get_building_payments = yes
	
}

get_building_payments = {
	set_temp_variable = {
		building_payments = num_of_civilian_factories
	}
	add_to_temp_variable = {
		building_payments = num_of_military_factories
	}
	add_to_temp_variable = {
		building_payments = num_of_dockyards
	}
	set_temp_variable = {
		payments_for_synthethic_refineries = 1.5
	}
	multiply_temp_variable = {
		payments_for_synthethic_refineries = num_of_synthethic_refineries
	}
	add_to_temp_variable = {
		building_payments = payments_for_synthethic_refineries
	}
	set_temp_variable = {
		payments_for_high_tech_complexes = 2.5
	}
	multiply_temp_variable = {
		payments_for_synthethic_refineries = num_of_high_tech_complexes
	}
	add_to_temp_variable = {
		building_payments = payments_for_high_tech_complexes
	}
	set_temp_variable = {
		payments_for_fuel_siloes = 1.25
	}
	multiply_temp_variable = {
		payments_for_fuel_siloes = num_of_fuel_siloes
	}
	add_to_temp_variable = {
		building_payments = payments_for_fuel_siloes
	}
	set_temp_variable = {
		payments_for_power_plants = 3.5
	}
	multiply_temp_variable = {
		payments_for_power_plants = sum_of_power_plants
	}
	add_to_temp_variable = {
		building_payments = payments_for_power_plants
	}
	set_temp_variable = {
		payments_for_wind_farms = 2.5
	}
	multiply_temp_variable = {
		payments_for_wind_farms = sum_of_wind_farms
	}
	add_to_temp_variable = {
		building_payments = payments_for_wind_farms
	}
	set_temp_variable = {
		payments_for_recycling_plants = 1.5
	}
	multiply_temp_variable = {
		payments_for_recycling_plants = num_of_recycling_plants
	}
	add_to_temp_variable = {
		building_payments = payments_for_recycling_plants
	}
	set_temp_variable = {
		payments_for_steel_works = 2.5
	}
	multiply_temp_variable = {
		payments_for_steel_works = num_of_steel_works
	}
	add_to_temp_variable = {
		building_payments = payments_for_steel_works
	}
	set_temp_variable = {
		payments_for_temples = 0.5
	}
	multiply_temp_variable = {
		payments_for_temples = num_of_cathedrals
	}
	add_to_temp_variable = {
		building_payments = payments_for_temples
	}
	set_temp_variable = {
		payments_for_universities = 0.25
	}
	multiply_temp_variable = {
		payments_for_universities = num_of_universities
	}
	add_to_temp_variable = {
		building_payments = payments_for_universities
	}
	set_temp_variable = {
		payments_for_hospitals = 0.325
	}
	multiply_temp_variable = {
		payments_for_steel_works = num_of_steel_works
	}
	add_to_temp_variable = {
		building_payments = payments_for_steel_works
	}
	set_temp_variable = {
		payments_for_prisons = 0.155
	}
	multiply_temp_variable = {
		payments_for_prisons = num_of_prisons
	}
	add_to_temp_variable = {
		building_payments = payments_for_prisons
	}
	set_temp_variable = {
		payments_for_januszexes = 2.5
	}
	multiply_temp_variable = {
		payments_for_januszexes = num_of_januszexes
	}
	add_to_temp_variable = {
		building_payments = payments_for_januszexes
	}
	subtract_from_variable = {
		budget = building_payments
	}
	set_variable = {
		monthly_building_payments = building_payments
	}
	divide_variable = {
		monthly_building_payments = 12
	}
	get_resource_payments = yes
}

get_resource_payments = {
	set_temp_variable = {
		aluminium_imports = resource_imported@aluminium
	}
	divide_temp_variable = {
		aluminium_imports = 100
	}
	multiply_temp_variable = {
		aluminium_imports = 2.61 #mln za 100 jednostek
	}
	set_variable = {
		monthly_imports = aluminium_imports
	}
	set_temp_variable = {
		coal_imports = resource_imported@coal
	}
	divide_temp_variable = {
		coal_imports = 100
	}
	multiply_temp_variable = {
		coal_imports = 0.36 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_imports = coal_imports
	}
	set_temp_variable = {
		electronics_imports = resource_imported@electronics
	}
	multiply_temp_variable = {
		electronics_imports = 0.3 #mln za 1 jednostkę
	}
	add_to_variable = {
		monthly_imports = electronics_imports
	}
	set_temp_variable = {
		junk_imports = resource_imported@junk
	}
	multiply_temp_variable = {
		junk_imports = 0.003 #mln za 1 jednostkę
	}
	add_to_variable = {
		monthly_imports = junk_imports
	}
	set_temp_variable = {
		oil_imports = resource_imported@oil
	}
	divide_temp_variable = {
		oil_imports = 100
	}
	multiply_temp_variable = {
		oil_imports = 1.38 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_imports = oil_imports
	}
	set_temp_variable = {
		steel_imports = resource_imported@steel
	}
	divide_temp_variable = {
		steel_imports = 100
	}
	multiply_temp_variable = {
		steel_imports = 0.42 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_imports = steel_imports
	}
	set_temp_variable = {
		food_imports = resource_imported@food
	}
	divide_temp_variable = {
		food_imports = 100
	}
	multiply_temp_variable = {
		food_imports = 0.02 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_imports = food_imports
	}	
	set_temp_variable = {
		synthetics_imports = resource_imported@synthetic_materials
	}
	divide_temp_variable = {
		synthetics_imports = 100
	}
	multiply_temp_variable = {
		synthetics_imports = 2.175 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_imports = synthetics_imports
	}

	set_temp_variable = {
		aluminium_exports = resource_exported@aluminium
	}
	divide_temp_variable = {
		aluminium_exports = 100
	}
	multiply_temp_variable = {
		aluminium_exports = 2.61 #mln za 100 jednostek
	}
	set_variable = {
		monthly_exports = aluminium_exports
	}
	set_temp_variable = {
		coal_exports = resource_exported@coal
	}
	divide_temp_variable = {
		coal_exports = 100
	}
	multiply_temp_variable = {
		coal_exports = 0.36 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_exports = coal_exports
	}
	set_temp_variable = {
		electronics_exports = resource_exported@electronics
	}
	multiply_temp_variable = {
		electronics_exports = 0.3 #mln za 1 jednostkę
	}
	add_to_variable = {
		monthly_exports = electronics_exports
	}
	set_temp_variable = {
		junk_exports = resource_exported@junk
	}
	multiply_temp_variable = {
		junk_exports = 0.003 #mln za 1 jednostkę
	}
	add_to_variable = {
		monthly_exports = junk_exports
	}
	set_temp_variable = {
		oil_exports = resource_exported@oil
	}
	divide_temp_variable = {
		oil_exports = 100
	}
	multiply_temp_variable = {
		oil_exports = 1.38 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_exports = oil_exports
	}
	set_temp_variable = {
		steel_exports = resource_exported@steel
	}
	divide_temp_variable = {
		steel_exports = 100
	}
	multiply_temp_variable = {
		steel_exports = 0.42 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_exports = steel_exports
	}
	set_temp_variable = {
		food_exports = resource_exported@food
	}
	divide_temp_variable = {
		food_exports = 100
	}
	multiply_temp_variable = {
		food_exports = 0.02 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_exports = food_exports
	}	
	set_temp_variable = {
		synthetics_exports = resource_exported@synthetic_materials
	}
	divide_temp_variable = {
		synthetics_exports = 100
	}
	multiply_temp_variable = {
		synthetics_exports = 2.175 #mln za 100 jednostek
	}
	add_to_variable = {
		monthly_exports = synthetics_exports
	}

	divide_variable = {
		budget = 12
	}
	subtract_from_variable = {
		budget = monthly_imports
	}
	add_to_variable = {
		budget = monthly_exports
	}

	
	add_to_variable = {
		liquidity = budget
	}
	get_military_payments = yes
}


get_military_payments = {
	set_temp_variable = {
		military_funds = num_battalions
	}
	multiply_temp_variable = {
		military_funds = 0.3 
	}
	divide_variable = {
		military_funds = 12
	}
	add_to_variable = {
		monthly_military_funds = military_funds
	}	
	subtract_from_variable = {
		budget = monthly_military_funds
	}
}



get_building_cost = {
	count_buildings = yes
	every_controlled_state = {
        # Reakcyjniak
		if = {
            limit = { check_variable = { prev_reactors < num_of_reactors } }
            set_variable = { new_reactors = num_of_reactors }
            subtract_from_variable = { new_reactors = prev_reactors }
            multiply_variable = { new_reactors = cost_for_reactor }
            subtract_from_variable = { budget = new_reactors }
            set_variable = { prev_reactors = num_of_reactors }
        }
		# Rocket Sites
        if = {
            limit = { check_variable = { prev_rockets < num_of_rockets } }
            set_variable = { new_rockets = num_of_rockets }
            subtract_from_variable = { new_rockets = prev_rockets }
            multiply_variable = { new_rockets = cost_for_rockets }
            subtract_from_variable = { budget = new_rockets }
            set_variable = { prev_rockets = num_of_rockets }
        }
		# Daaaaamm girl
        if = {
            limit = { check_variable = { prev_dams < num_of_dams } }
            set_variable = { new_dams = num_of_dams }
            subtract_from_variable = { new_dams = prev_dams }
            multiply_variable = { new_dams = cost_for_dams }
            subtract_from_variable = { budget = new_dams }
            set_variable = { prev_dams = num_of_dams }
        }
		# Air Base
        if = {
            limit = { check_variable = { prev_airbase < num_of_airbase } }
            set_variable = { new_airbases = num_of_airbase }
            subtract_from_variable = { new_airbases = prev_airbase }
            multiply_variable = { new_airbases = cost_for_airbase }
            subtract_from_variable = { budget = new_airbases }
            set_variable = { prev_airbase = num_of_airbase }
        }
		# SupplyHub
        if = {
            limit = { check_variable = { prev_supplyhub < num_of_supplyhub } }
            set_variable = { new_supplyhubs = num_of_supplyhub }
            subtract_from_variable = { new_supplyhubs = prev_supplyhub }
            multiply_variable = { new_supplyhubs = cost_for_supplyhub }
            subtract_from_variable = { budget = new_supplyhubs }
            set_variable = { prev_supplyhub = num_of_supplyhub }
        }
		# Bunkers
        if = {
            limit = { check_variable = { prev_bunker < num_of_bunker } }
            set_variable = { new_bunkers = num_of_bunker }
            subtract_from_variable = { new_bunkers = prev_bunker }
            multiply_variable = { new_bunkers = cost_for_bunker }
            subtract_from_variable = { budget = new_bunkers }
            set_variable = { prev_bunker = num_of_bunker }
        }
		# Stronghold Network
        if = {
            limit = { check_variable = { prev_stronghold < num_of_stronghold } }
            set_variable = { new_strongholds = num_of_stronghold }
            subtract_from_variable = { new_strongholds = prev_stronghold }
            multiply_variable = { new_strongholds = cost_for_stronghold }
            subtract_from_variable = { budget = new_strongholds }
            set_variable = { prev_stronghold = num_of_stronghold }
        }
		# Anti-Air
        if = {
            limit = { check_variable = { prev_aa < num_of_aa } }
            set_variable = { new_aa = num_of_aa }
            subtract_from_variable = { new_aa = prev_aa }
            multiply_variable = { new_aa = cost_for_aa }
            subtract_from_variable = { budget = new_aa }
            set_variable = { prev_aa = num_of_aa }
        }
		# Radar
        if = {
            limit = { check_variable = { prev_radar < num_of_radar } }
            set_variable = { new_radars = num_of_radar }
            subtract_from_variable = { new_radars = prev_radar }
            multiply_variable = { new_radars = cost_for_radar }
            subtract_from_variable = { budget = new_radars }
            set_variable = { prev_radar = num_of_radar }
        }
		# Facilities
		if = {
			limit = { check_variable = { prev_facilities < num_of_facilities } }
				set_variable = { new_facilities = num_of_facilities }
				subtract_from_variable = { new_facilities = prev_facilities }
				multiply_variable = { new_facilities = cost_for_facilities } # Cost per factory
				subtract_from_variable = { budget = new_facilities }
				set_variable = { prev_facilities = num_of_facilities }
		}	
		# Ports
		if = {
			limit = { check_variable = { prev_ports < num_of_ports } }
				set_variable = { new_ports = num_of_ports }
				subtract_from_variable = { new_ports = prev_ports }
				multiply_variable = { new_ports = cost_for_ports } # Cost per factory
				subtract_from_variable = { budget = new_ports }
				set_variable = { prev_ports = num_of_ports }
		}			
		# Temples
		if = {
			limit = { check_variable = { prev_temples < num_of_cathedrals } }
				set_variable = { new_temples = num_of_cathedrals }
				subtract_from_variable = { new_temples = prev_temples }
				multiply_variable = { new_temples = cost_for_temples } # Cost per factory
				subtract_from_variable = { budget = new_temples }
				set_variable = { prev_temples = num_of_cathedrals }
		}		
		# Universities
		if = {
			limit = { check_variable = { prev_universities < num_of_universities } }
				set_variable = { new_universities = num_of_universities }
				subtract_from_variable = { new_universities = prev_universities }
				multiply_variable = { new_universities = cost_for_universities } # Cost per factory
				subtract_from_variable = { budget = new_universities }
				set_variable = { prev_universities = num_of_universities }
		}
		# Hospitals
		if = {
			limit = { check_variable = { prev_hospitals < num_of_hospitals } }
				set_variable = { new_hospitals = num_of_hospitals }
				subtract_from_variable = { new_hospitals = prev_hospitals }
				multiply_variable = { new_hospitals = cost_for_hospitals } # Cost per factory
				subtract_from_variable = { budget = new_hospitals }
				set_variable = { prev_hospitals = num_of_hospitals }
		}		
		# Prisons
		if = {
			limit = { check_variable = { prev_prisons < num_of_prisons } }
				set_variable = { new_prisons = num_of_prisons }
				subtract_from_variable = { new_prisons = prev_prisons }
				multiply_variable = { new_prisons = cost_for_prisons } # Cost per factory
				subtract_from_variable = { budget = new_prisons }
				set_variable = { prev_prisons = num_of_prisons }
		}		
		# Januszexes
		if = {
			limit = { check_variable = { prev_januszexes < num_of_januszexes } }
				set_variable = { new_januszexes = num_of_januszexes }
				subtract_from_variable = { new_januszexes = prev_januszexes }
				multiply_variable = { new_januszexes = cost_for_januszexes } # Cost per factory
				subtract_from_variable = { budget = new_januszexes }
				set_variable = { prev_januszexes = num_of_januszexes }
		}	

		# Steel Works
		if = {
			limit = { check_variable = { prev_steel < num_of_steel_works } }
				set_variable = { new_steel = num_of_steel_works }
				subtract_from_variable = { new_steel = prev_steel }
				multiply_variable = { new_steel = cost_for_steel_works } # Cost per factory
				subtract_from_variable = { budget = new_steel }
				set_variable = { prev_steel = num_of_steel_works }
		}		
		# Recycling Plants
		if = {
			limit = { check_variable = { prev_recycling < num_of_recycling_plants } }
				set_variable = { new_recycling = num_of_recycling_plants }
				subtract_from_variable = { new_recycling = prev_recycling }
				multiply_variable = { new_recycling = cost_for_recycling_plants } # Cost per factory
				subtract_from_variable = { budget = new_recycling }
				set_variable = { prev_recycling = num_of_recycling_plants }
		}
		# Civilian Factories
		if = {
			limit = { check_variable = { prev_civ_factories < num_of_civilian_factories } }
				set_variable = { new_civ_factories = num_of_civilian_factories }
				subtract_from_variable = { new_civ_factories = prev_civ_factories }
				multiply_variable = { new_civ_factories = cost_for_civilian_factory } # Cost per factory
				subtract_from_variable = { budget = new_civ_factories }
				set_variable = { prev_civ_factories = num_of_civilian_factories }
		}
		# Military Factories
		if = {
			limit = { check_variable = { prev_mil_factories < num_of_military_factories } }
				set_variable = { new_mil_factories = num_of_military_factories }
				subtract_from_variable = { new_mil_factories = prev_mil_factories }
				multiply_variable = { new_mil_factories = cost_for_military_factory }
				subtract_from_variable = { budget = new_mil_factories }
				set_variable = { prev_mil_factories = num_of_military_factories }
		}
		# Dockyards
		if = {
			limit = { check_variable = { prev_dockyards < num_of_dockyards } }
				set_variable = { new_dockyards = num_of_dockyards }
				subtract_from_variable = { new_dockyards = prev_dockyards }
				multiply_variable = { new_dockyards = cost_for_dockyards }
				subtract_from_variable = { budget = new_dockyards }
				set_variable = { prev_dockyards = num_of_naval_dockyards }
		}
		# Synthetic Refineries
		if = {
			limit = { check_variable = { prev_synths < num_of_synthethic_refineries } }
				set_variable = { new_synths = num_of_synthethic_refineries }
				subtract_from_variable = { new_synths = prev_synths }
				multiply_variable = { new_synths = cost_for_synthethic_refineries }
				subtract_from_variable = { budget = new_synths }
				set_variable = { prev_synths = num_of_synthethic_refineries }
		}
		# High Tech
		if = {
			limit = { check_variable = { prev_hitech < num_of_high_tech_complexes } }
				set_variable = { new_hitech = num_of_high_tech_complexes }
				subtract_from_variable = { new_hitech = prev_hitech }
				multiply_variable = { new_hitech = cost_for_high_tech_complexes }
				subtract_from_variable = { budget = new_hitech }
				set_variable = { prev_hitech = num_of_high_tech_complexes }
		}
		# Fuel Silos
		if = {
			limit = { check_variable = { prev_silos < num_of_fuel_siloes } }
				set_variable = { new_silos = num_of_fuel_siloes }
				subtract_from_variable = { new_silos = prev_silos }
				multiply_variable = { new_silos = cost_for_fuel_siloes }
				subtract_from_variable = { budget = new_silos }
				set_variable = { prev_silos = num_of_fuel_siloes }
		}
		# Power Plant
		if = {
			limit = { check_variable = { prev_coal_plants < sum_of_power_plants } }
				set_variable = { new_coal_plants = sum_of_power_plants }
				subtract_from_variable = { new_coal_plants = prev_coal_plants }
				multiply_variable = { new_coal_plants = cost_for_power_plants }
				subtract_from_variable = { budget = new_coal_plants }
				set_variable = { prev_coal_plants = sum_of_power_plants }
		}
		# Wind Farms
		if = {
			limit = { check_variable = { prev_wind_farms < sum_of_wind_farms } }
				set_variable = { new_wind_farms = sum_of_wind_farms }
				subtract_from_variable = { new_wind_farms = prev_wind_farms }
				multiply_variable = { new_wind_farms = cost_for_wind_farms }
				subtract_from_variable = { budget = new_wind_farms }
				set_variable = { prev_wind_farms = sum_of_wind_farms }
		}										

	}
}