calculate_energy_balance = {
	calculate_generated_energy = yes
	calculate_used_energy = yes
	set_variable = { current_balance = generated_energy }
	subtract_from_variable = { current_balance = used_energy }
	if = {
		limit = {
			has_variable = energy_exported
		}
		subtract_from_variable = { current_balance = energy_exported }
	}
	if = {
		limit = {
			has_variable = energy_imported
		}
		add_to_variable = { current_balance = energy_imported }
	}
	calculate_energy_effects = yes
	#log = "[GetDateText]: [ROOT.GetName] - energy tick"
}

calculate_generated_energy = {
	set_temp_variable = { num_of_power_plants = 0 }
	set_temp_variable = { num_of_wind_farms = 0 }
	set_variable = { coal_used_by_power_plants = 0 }
	set_variable = { free_coal = resource@coal }
	every_controlled_state = {
		limit = {
			always = yes
		}
		set_variable = { this.power_plants_in_state = building_level@power_plant }
		add_to_temp_variable = { PREV.num_of_power_plants = building_level@power_plant }
		add_to_temp_variable = { PREV.num_of_wind_farms = building_level@wind_farm }
		if = {
			limit = {
				check_variable = {this.power_plants_in_state > 0}
			}
			add_to_variable = {
				prev.coal_used_by_power_plants = this.power_plants_in_state
			}
		}
	}
	multiply_variable = {
		coal_used_by_power_plants = 5
	}
	add_dynamic_modifier = {
		modifier = coal_used_by_power_plants_modifier
	}
	set_variable = { generated_energy = num_of_power_plants }
	set_variable = {lack_of_coal_modifier = 1}
	multiply_variable = { generated_energy = 1350 }
	if = {
		limit = {
			check_variable = {
				var = free_coal
				value = 0
				compare = less_than
			}
		}
		set_variable = {lack_of_coal_modifier = free_coal}
		divide_variable = {lack_of_coal_modifier = coal_used_by_power_plants}
		clamp_variable = { 
			var = lack_of_coal_modifier
			min = -0.9
			max = 0
		}
		add_to_variable = {lack_of_coal_modifier = 1}
	}
	
	multiply_variable = { generated_energy = lack_of_coal_modifier }
	set_temp_variable = { energy_from_wind_farms = num_of_wind_farms }
	multiply_temp_variable = { energy_from_wind_farms = 675 }
	add_to_variable = { generated_energy = energy_from_wind_farms }
	set_variable = { bonus_from_ideas = 1.0}
	add_to_variable = {bonus_from_ideas = modifier@energy_modifer}
	multiply_variable = { generated_energy = bonus_from_ideas }
	if = {
		limit = {
			has_variable = BBW_pre_blackout_nerf
		}
		multiply_variable = { generated_energy = BBW_pre_blackout_nerf }
	}
	if = {
		limit = {
			has_variable = power_from_atom
		}
		add_to_variable =  { generated_energy = power_from_atom }
	}
}

calculate_used_energy = {
	set_variable = { used_energy = num_of_military_factories}
	subtract_from_variable = {used_energy = workshops_count}
	multiply_variable = { used_energy = 200 }
	set_temp_variable = { energy_for_industry = num_of_civilian_factories }
	every_controlled_state = {
		limit = {
			always = yes
		}
		add_to_temp_variable = { PREV.energy_for_industry = building_level@synthetic_refinery }
		add_to_temp_variable = { PREV.energy_for_industry = building_level@high_tech_complex }
		add_to_temp_variable = { PREV.energy_for_industry = workshops_count }
	}
	multiply_temp_variable = { energy_for_industry = 100 }
	add_to_variable = { used_energy = energy_for_industry }
	if = {
		limit = {
			has_country_flag = importing_energy
		}
		subtract_from_variable = { used_energy = 750 }
	}
}

calculate_energy_effects = {
	set_variable = { ee_multiplier = current_balance }
	if = {
		limit = {
			check_variable = { generated_energy = 0 }
		}
		divide_variable = { ee_multiplier = 675 }
	}
	else = {
		divide_variable = { ee_multiplier = generated_energy }
	}
	clamp_variable = {
		var = ee_multiplier
		min = -1
	}
	if = {
		limit = {
			check_variable = { ee_multiplier < 0 }
		}
		set_variable = { low_power_penalty = 0.5 }
		multiply_variable = { low_power_penalty = ee_multiplier }
		add_dynamic_modifier = {
			modifier = lack_of_energy_modifier
		}
	}
}