on_actions = {
	on_state_control_changed = {
		effect = {
			recalculate_deposit_levels = yes
		}
	}
	on_capitulation_immediate = {
		effect = {
			log = "[GetDateText]: [ROOT.GetName] ([?ROOT.casualties_k]) was just capped by [FROM.GetName] ([?FROM.casualties_k])"
			add_to_array = {
				global.capitulated_countries = this
			}
			if = {
				limit = {
					ROOT = {
						is_in_faction = yes
							NOT = {
								AND = {
									original_tag = HOR
									NOT = { has_country_flag = HOR_procession_has_landed }
								}
							}
					}
				}
				if = {
					limit = {
						is_faction_leader = no
					}
					leave_faction = yes
				}
				else = {
					every_country = {
						limit = {
							is_in_faction_with = ROOT
						}
						ROOT = {
							remove_from_faction = this
						}
					}
				}
			}
			
			if = {
				limit = {
					ROOT = {
						has_country_flag = importing_energy
					}
				}
				BBW = {
					add_offsite_building = {
						level = -1
						type = industrial_complex
					}
					subtract_from_variable = {energy_exported = 750}
				}
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							original_tag = KRS
							original_tag = SAP
							original_tag = WML
							original_tag = ZHP
							original_tag = ZYD
						}
					}
				}
				if = {
					limit = {
						not ={
							BBW = {
								has_variable = BBW_pre_blackout_nerf
							}
							
						}
					}
					BBW = {
						set_variable = {BBW_pre_blackout_nerf = 0.9}
					}
					
				}
				else = {
					BBW = {
						add_to_variable = {BBW_pre_blackout_nerf = -0.1}
					}
				}
				BBW = {
					calculate_energy_balance = yes
				}
			}

			if = {
				limit = {
					FROM = {
						original_tag = BRZ
					}
					ROOT = {
						any_character = {
							has_character_flag = is_footballer
						}
					}
				}
				ROOT = {
					random_character = {
						limit = {
							has_character_flag = is_footballer
						}
						random_list = {
							1 = {
								set_character_flag = is_attacker
							}
							1 = {
								set_character_flag = is_midfielder
							}
							1 = {
								set_character_flag = is_defender
							}
							1 = {
								set_character_flag = is_goalkeeper
							}
						}
						set_character_flag = taken_over_for_BRZ
						set_nationality = {
							character = THIS
							target_country = BRZ
						}
					}
				}
				FROM = {
					country_event = buzzer.1974 #pdk
				}
			}
		}
	}
	on_capitulation = {
		effect = {
			#set_global_flag = announce_peace
			#FROM = {
			#	save_global_event_target_as = winning_country
			#} 
			#ROOT = {
			#	save_global_event_target_as = losing_country
			#}
			#if = {
			#	limit = {
			#		event_target:losing_country = {
			#			any_allied_country = {
			#				has_war_together_with = event_target:losing_country
			#			}
			#		}
			#	}
			#	set_global_flag = losing_country_multiple
			#}
			#if = {
			#	limit = {
			#		event_target:winning_country = {
			#			any_allied_country = {
			#				has_war_together_with = event_target:winning_country
			#			}
			#		}
			#	}
			#	set_global_flag = winning_country_multiple
			#}
			#add_to_variable = { global.peace_popup_dirty = 1 }
				if = {
					limit = {
						ROOT = {
							original_tag = RMA
						}
					}
				log = "[GetDateText]: ITS OVER FOR RUSSIA BROS"
				every_country = {
					limit = { is_ai = no }
					news_event = {
						id = rosja.2
					}
				}
				40 = {
					add_core_of = TEU
					transfer_state_to = TEU
					remove_core_of = RMA
				}
				log = "[GetDateText]: [TEU.GetName] cores [40.GetName]"
				993 = {
					add_core_of = TEU
					transfer_state_to = TEU
					remove_core_of = RMA
				}
				log = "[GetDateText]: [TEU.GetName] cores [993.GetName]"
				42 = {
					add_core_of = WRM
					transfer_state_to = WRM
					remove_core_of = RMA
				}
				log = "[GetDateText]: [WRM.GetName] cores [42.GetName]"
				47 = {
					add_core_of = WRM
					transfer_state_to = WRM
					remove_core_of = RMA
				}
				log = "[GetDateText]: [WRM.GetName] cores [47.GetName]"
				51 = {
					add_core_of = MRG
					transfer_state_to = MRG
					remove_core_of = RMA
				}
				log = "[GetDateText]: [MRG.GetName] cores [51.GetName]"
				875 = {
					add_core_of = PZW
					transfer_state_to = PZW
					remove_core_of = RMA
				}
				log = "[GetDateText]: [PZW.GetName] cores [875.GetName]"
				46 = {
					add_core_of = PZW
					transfer_state_to = PZW
					remove_core_of = RMA
				}
				log = "[GetDateText]: [PZW.GetName] cores [46.GetName]"
				994 = {
					add_core_of = MRG
					transfer_state_to = MRG
					remove_core_of = RMA
				}
				log = "[GetDateText]: [MRG.GetName] cores [994.GetName]"
				RMA = {
				white_peace = TEU
				log = "[GetDateText]: [ROOT.GetName] WPs with [TEU.GetName]"
				white_peace = WRM
				log = "[GetDateText]: [ROOT.GetName] WPs with [WRM.GetName]"
				white_peace = MAL
				log = "[GetDateText]: [ROOT.GetName] WPs with [MAL.GetName]"
				white_peace = PRU
				log = "[GetDateText]: [ROOT.GetName] WPs with [PRU.GetName]"
				white_peace = PZW
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = MRG
				log = "[GetDateText]: [ROOT.GetName] WPs with [MRG.GetName]"
				white_peace = ELB
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = LUB
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = OLS
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = RAJ
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = GAL
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				}
				ROS = {
				white_peace = TEU
				log = "[GetDateText]: [ROOT.GetName] WPs with [TEU.GetName]"
				white_peace = WRM
				log = "[GetDateText]: [ROOT.GetName] WPs with [WRM.GetName]"
				white_peace = MAL
				log = "[GetDateText]: [ROOT.GetName] WPs with [MAL.GetName]"
				white_peace = PRU
				log = "[GetDateText]: [ROOT.GetName] WPs with [PRU.GetName]"
				white_peace = PZW
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = MRG
				log = "[GetDateText]: [ROOT.GetName] WPs with [MRG.GetName]"
				white_peace = ELB
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = LUB
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = OLS
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = RAJ
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				white_peace = GAL
				log = "[GetDateText]: [ROOT.GetName] WPs with [PZW.GetName]"
				}
				every_state = {
					limit = {
						is_warmia_and_masuria_state = yes
					}
					teleport_armies = {
						limit = {
							original_tag = ELB
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = TEU
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = LUB
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = MAL
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = WRM
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = MRG
							is_ai = yes
						}
					}
					teleport_armies = {
						limit = {
							original_tag = PZW
							is_ai = yes
						}
					}																														
				}
				ROS = {
					remove_wargoal = {
						type = all
						target = TEU
					}
					remove_wargoal = {
						type = all
						target = LUB
					}
				}				
				PZW = { leave_faction = yes }
				log = "[GetDateText]: [PZW.GetName] quits faction"
				TEU = { leave_faction = yes }
				log = "[GetDateText]: [TEU.GetName] quits faction"
				ELB = { leave_faction = yes }
				log = "[GetDateText]: [ELB.GetName] quits faction"
				MRG = { leave_faction = yes }
				log = "[GetDateText]: [MRG.GetName] quits faction"
				WRM = { dismantle_faction = yes }
				log = "[GetDateText]: [WRM.GetName] dismantles faction"
				random_list = {
					1 = {
						every_country = {
							limit = {  is_ai = no  }
							news_event = { 
								id = rosja.4
								days = 9
							}
						}
					}
					1 = {
						every_country = {
							limit = {  is_ai = no  }
							news_event = { 
								id = rosja.5
								days = 2
							}
						}
					}
				}
			}
				if = {
					limit = {
						ROOT = {
							original_tag = SWC
							is_subject_of = BYD
						}
						FROM = {
							original_tag = LOT
						}
					}
					annex_country = {
						target = SWC
						transfer_troops = no
					}
					white_peace = BYD
					set_global_flag = skip_default_capitulation
				}			
				if = {
					limit = {
						ROOT = {
							original_tag = WDW
						}
						FROM = {
							OR = {
								original_tag = HOR
								original_tag = MSL
							}
						}
					}

					FROM = {
						white_peace = ROOT
						if = {
							limit = {
								country_exists = HOR
							}
							HOR = {
								transfer_state = 927
								transfer_state = 519
								transfer_state = 929
								transfer_state = 515
								transfer_state = 594
								transfer_state = 898
							}
						}
					}
					log = "[GetDateText]: HOR and OSW beaten [ROOT.GetName]"
					set_global_flag = skip_default_capitulation
				}
				if = {
					limit = {
						ROOT = {
							original_tag = RPP
						}
						FROM = {
							OR = {
								original_tag = BPD
								original_tag = TEN
							}
						}
					}

					FROM = {
						white_peace = ROOT
						if = {
							limit = {
								country_exists = BPD
							}
							BPD = {
								transfer_state = 278
								transfer_state = 290
							}
						}
						if = {
							limit = {
								country_exists = TEN
							}
							TEN = {
								transfer_state = 241
							}
						}						
					}
					log = "[GetDateText]: HOR and OSW beaten [ROOT.GetName]"
					set_global_flag = skip_default_capitulation
				}				
				if = {
					limit = {
						ROOT = {
							OR = {
								original_tag = HOR
								AND = {
									original_tag = MSL
									original_tag = HOR
								}
							}						
						}
						FROM = {
							is_poland_unifier = yes
							NOT = { original_tag = WDW }
						}
					}

					FROM = {
						white_peace = ROOT
						annex_country = {
							target = HOR
						}
						annex_country = {
							target = MSL
						}						
					}
					log = "[GetDateText]: HOR and OSW beaten [ROOT.GetName]"
					set_global_flag = skip_default_capitulation
				}				
				if = {
					limit = {
						ROOT = {
							original_tag = EKW
						}
					}
					every_state = {
						limit = {
							is_claimed_by = JAS
						}
						add_core_of = JAS
					}
				}
				if = {
					limit = {
						ROOT = {
							original_tag = GDA
						}
					}
					every_controlled_state = {
						limit = {
							is_claimed_by = GDA
						}
						add_claim_by = FROM
					}
				}
			
			if = {
				limit = {
					FROM = {
						original_tag = SND
					}
					ROOT = {
						original_tag = STA
					}
				}
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
				FROM = {
					add_ideas = SND_halfhearted_strikes
				}
				set_global_flag = skip_default_capitulation
			}
			if = {
				limit = {
					FROM = {
						original_tag = SND
					}
					ROOT = {
						original_tag = ETS
					}
				}
				annex_country = {
					target = ROOT
					transfer_troops = no
				}
				FROM = {
					add_ideas = SND_halfhearted_strikes
				}
				set_global_flag = skip_default_capitulation
			}						
			if = {
				limit = {
					FROM = {
						original_tag = KNN
					}
					ROOT = {
						original_tag = GNI
					}
				}
				ROOT = {
					white_peace = KNN
					white_peace = KLO
				}
				GNI_przemysł_iii = {
					retire = yes
				}
				KNN = {
					KNN_danielewski = {
						set_nationality = GNI
						promote_character = yes
						set_character_name = "Mieszko IV"
					}
				}				
				GNI = {
					create_faction = "Drużyny Piastowskie"
					add_to_faction = KLO
					add_to_faction = KNN
				}
				set_global_flag = skip_default_capitulation
			}
			if = {
					limit = {
						ROOT = {
							original_tag = BRE
						}
						FROM = {
							OR = {
								original_tag = WRO
								original_tag = RYB
							}
						}
					}

					FROM = {
						white_peace = ROOT
						WRO = {
							transfer_state = 606
							transfer_state = 387
							transfer_state = 371
							transfer_state = 369
							transfer_state = 806
							transfer_state = 343
						}
						RYB = {
							transfer_state = 338
							transfer_state = 344
							transfer_state = 334
							transfer_state = 324
						}
					}
					log = "[GetDateText]: Breslau ded"
					set_global_flag = skip_default_capitulation
				}			
			if = {
					limit = {
						ROOT = {
							original_tag = KES
						}
						FROM = {
							OR = {
								original_tag = CAL
								original_tag = FEL
							}
						}
					}

					FROM = {
						white_peace = ROOT
						CAL = {
							transfer_state = 342
							transfer_state = 359
							transfer_state = 337
							transfer_state = 335
							transfer_state = 311
							transfer_state = 851
							transfer_state = 285
							transfer_state = 688
							transfer_state = 314
							transfer_state = 286
							transfer_state = 280
							transfer_state = 846
						}
						FEL = {
							transfer_state = 257
							transfer_state = 843
							transfer_state = 240
							transfer_state = 698
							transfer_state = 271
							diplomatic_relation = {
								country = LIS
								relation = puppet
								active = yes
							}
						}
						LIS = {
							transfer_state = 320	
							transfer_state = 298
							transfer_state = 274
							transfer_state = 292
							set_politics = {
								ruling_party = squattism
								}
							set_popularities = {
								marxism_cranism	= 0
								squattism = 74
								socialdemocrature = 0
								euroliberalism = 0
								freemarketism = 0
								paternal_conservatism = 0
								autocracy = 0
								corporativism = 0
								neonationalism = 0
								reactionary = 26
								postpolonism = 0
							}
						}
					}
					log = "[GetDateText]: Kesselring ded"
					set_global_flag = skip_default_capitulation
				}
				if = {
					limit = {
						ROOT = {
							original_tag = KES
						}
						FROM = {
							original_tag = LIS
						}
					}

					FROM = {
						white_peace = ROOT
						CAL = {
							transfer_state = 342
							transfer_state = 359
							transfer_state = 337
						}
						LIS = {
							transfer_state = 320	
							transfer_state = 298
							transfer_state = 274
							transfer_state = 292
							set_politics = {
								ruling_party = squattism
								}
							set_popularities = {
								marxism_cranism	= 0
								squattism = 74
								socialdemocrature = 0
								euroliberalism = 0
								freemarketism = 0
								paternal_conservatism = 0
								autocracy = 0
								corporativism = 0
								neonationalism = 0
								reactionary = 26
								postpolonism = 0
							}
						}
					}
					log = "[GetDateText]: Kesselring ded"
					set_global_flag = skip_default_capitulation
				}
				if = {
					limit = {
						ROOT = {
							original_tag = SVG
						}
						FROM = {
							OR = {
								original_tag = GAY
								original_tag = RLE
							}
						}
					}
					FROM = {
						white_peace = ROOT
						GAY = {
							transfer_state = 624
							transfer_state = 1076
						}
						RLE = {
							transfer_state = 625
							transfer_state = 627
						}
					}
					log = "[GetDateText]: Słowincy ded"
					set_global_flag = skip_default_capitulation
				}
				if = {
					limit = {
						ROOT = {
							original_tag = KOS
						}
						FROM = {
							OR = {
								original_tag = GAY
								original_tag = RLE
								original_tag = PGF
								original_tag = USP
							}
						}
					}
					FROM = {
						white_peace = ROOT
						GAY = {
							add_state_core = 1077
							transfer_state = 1077
							add_state_core = 1078
							transfer_state = 1078
						}
						RLE = {
							add_state_core = 1065
							transfer_state = 1065
							add_state_core = 1066
							transfer_state = 1066
						}
						PGF = {
							add_state_core = 868
							transfer_state = 868
						}
						USP = {
							transfer_state = 622
							transfer_state = 53
							transfer_state = 63
							transfer_state = 45
							transfer_state = 33
						}
						SVG = {
							add_state_core = 624
							add_state_core = 1076
							add_state_core = 625
							add_state_core = 627
							add_state_core = 628
							transfer_state = 624
							transfer_state = 1076
							transfer_state = 625
							transfer_state = 627
							transfer_state = 628

							load_oob = "SVG_2027"
						}
					}
					log = "[GetDateText]: Mittelpommern ded"
					set_global_flag = skip_default_capitulation
				}
			if = {
				limit = {
					ROOT = {
						original_tag = GFL
					}
					FROM = {
						original_tag = ZHP
					}
				}
				FROM = {
					country_event = {
						id = zhp.21
					}
				}
				log = "[GetDateText]: ZHP whacked greys"
			}
			if = {
				limit = {
					ROOT = {
						original_tag = ZHP
					}
					FROM = {
						original_tag = GFL
					}
					all_other_country = {
						NOT = {
							original_tag = GFL
						}
						NOT = {
							has_war_with = ROOT
						}
					}
				}
				ZHP_return_characters = yes
				ROOT = {
					white_peace = FROM
					annex_country = {
						target = FROM
						transfer_troops = yes
					}
				}
				set_politics = {
					ruling_party = postpolonism
				}
				set_country_leader_ideology = scout_system_subtype
				set_global_flag = ZHP_civil_war_lost
				set_global_flag = skip_default_capitulation
				log = "[GetDateText]: ZHP lost to greys"
			}
			if = {
				limit = {
					ROOT = {
						original_tag = ZHP
					}
					FROM = {
						original_tag = ZHR
					}
					all_other_country = {
						NOT = {
							original_tag = ZHR
						}
						NOT = {
							has_war_with = ROOT
						}
					}
				}
				ZHP_return_characters = yes
				ROOT = {
					white_peace = FROM
					annex_country = {
						target = FROM
						transfer_troops = yes
					}
				}
				set_politics = {
					ruling_party = paternal_conservatism
				}
				set_country_leader_ideology = paternal_conservatism_subtype
				set_global_flag = ZHP_civil_war_lost
				set_global_flag = skip_default_capitulation
				log = "[GetDateText]: ZHP lost to archbishop"
			}
			
			if = {	
				limit = {
					OR = {
						ROOT = { is_in_faction = no }
						ROOT = {
							all_allied_country = {
								has_capitulated = yes
							}
						}
					}
				}
				if = {
					limit = {
						FROM = {
							original_tag = BBW
						}
					}
					clear_array = global.capped_states
				}
				every_country = {
					limit = {
						is_in_faction_with = ROOT
					}
					leave_faction = yes
				}
				FROM = {
					log = "[GetDateText]: Before: [?ROOT.num_owned_states]"
					every_controlled_state = {
						limit = {
							is_owned_by = ROOT
						}
						if = {
							limit = {
								FROM = {
									original_tag = BBW
								}
							}
							add_to_array = { global.capped_states = THIS }
						}
						transfer_state_to = FROM
					}
					log = "[GetDateText]: [FROM.GetName] takes states from [ROOT.GetName]"
					every_other_country = {
						limit = {
							has_war_together_with = FROM
						}
						every_controlled_state = {
							limit = {
								is_owned_by = ROOT
							}
							transfer_state_to = PREV
						}
						log = "[GetDateText]: [THIS.GetName] (figthing together with [FROM.GetName]) takes states from [ROOT.GetName]"
					}
					every_other_country = {
						limit = {
							has_war_with = ROOT
						}
						every_controlled_state = {
							limit = {
								is_owned_by = ROOT
							}
							transfer_state_to = PREV
						}
						log = "[GetDateText]: [THIS.GetName] takes states from [ROOT.GetName]"
					}
					log = "[GetDateText]: [FROM.GetName] killed [ROOT.GetName]"
					log = "[GetDateText]: After: [?ROOT.num_owned_states] (controlled [?ROOT.num_of_controlled_states])"
					if = {
						limit = {
							OR = {
								ROOT = {
									num_of_controlled_states > 0
								}
								ROOT = {
									check_variable = {
										num_owned_states > 0
									}
								}
							}
						}
						log = "[GetDateText]: [ROOT.GetName] refuse to die!"
						annex_country = {
							target = ROOT
							transfer_troops = no
						}
					}
					if = {
						limit = {
							FROM = {
								OR = {
									original_tag = EKS
									original_tag = EKW
									original_tag = KGH
									original_tag = ZUL
									original_tag = WRO
									original_tag = WRT
									original_tag = KAM
									original_tag = STE
									original_tag = GDA
									original_tag = KSZ
									original_tag = LEH
									original_tag = MNI
									original_tag = POZ
									original_tag = PRK
								}
							}
						}
						every_owned_state = {
							limit = {
								is_claimed_by = FROM
								NOT = {
									is_core_of = FROM
								}
							}
							add_core_of = FROM
						}
					}
					if = {
						limit = {
							ROOT = {
								OR = {
									original_tag = EKS
									original_tag = EKW
									original_tag = KGH
									original_tag = ZUL
									original_tag = WRO
									original_tag = WRT
									original_tag = KAM
									original_tag = STE
									original_tag = GDA
									original_tag = KSZ
									original_tag = LEH
									original_tag = MNI
									original_tag = POZ
									original_tag = PRK
								}
							}
						}
						every_state = {
							limit = {
								is_claimed_by = ROOT
							}
							add_core_of = ROOT
						}
					}
					#white_peace = ROOT
					#annex_country = {
						#target = ROOT
						#transfer_troops = no
					#}
				}
				#set_global_flag = war_won
				set_global_flag = skip_default_capitulation
			}
			
			if = {
				limit = {
					FROM = {
						original_tag = BBW
					}
				}
				FROM = {
					country_event = {
						id = belchatow.9001
						days = 7
					}
				}
			}	
			if = {
				limit = {
					FROM = {
						original_tag = DGR
					}
					ROOT = {
						original_tag = DGA
					}
				}
				FROM = {
					set_country_flag = DGR_OP_victory 
					set_country_flag = DGR_OA_victory 
					set_country_flag = DGR_OZ_victory 
					set_country_flag = DGR_OL_victory
					set_country_flag = DGR_OB_victory
					set_country_flag = DGR_OM_victory
					set_country_flag = DGR_OZ_victory
					set_country_flag = DGR_AH_victory
					set_country_flag = DGR_AS_victory
					set_country_flag = DGR_AW_victory
					clr_country_flag = DGR_district_wars_on
				}
			}
			if = {
				limit = {
					FROM = {
						original_tag = JOM
					}
				}
				JOM = {
					add_to_variable = {
						jomsborg_rune_counter = 1
					}
				}
			}											
			if = {
				limit = {
					FROM = {
						original_tag = ATM
					}
					ROOT = {
						original_tag = BBW
					}
				}
				FROM = {
					multiply_variable = {
						emergency_workshops = -1
					}
					add_offsite_building = {
						type = arms_factory
						level = emergency_workshops
					}
					set_country_flag = unified_voivodeship
					hidden_effect = {
						add_dynamic_modifier = {
							modifier = developed_economy_modifier
						}
						add_ideas = administrative_strain
						set_technology = {
							public_services = 1
						}
					}
					set_global_flag = lodzkie_unified
					add_research_slot = 1
					every_country = {
						limit = { NOT = { is_ai = yes } }
						news_event = { id = unification.156 }
					}
					remove_ideas = ATM_consortium_supplies
					load_focus_tree = ATM_focus_final
					set_capital = { state = 302 }
				}
				580 = {
					transfer_state_to = ZON
				}
			}
		}
	}
	on_peace = {
		effect = {
			THIS = {
				count_buildings = yes
				set_variable = { prev_civ_factories = num_of_civils }
				set_variable = { prev_mil_factories = num_of_militars }
				set_variable = { prev_dockyards = num_of_dockyards }
				set_variable = { prev_synths = num_of_synthetic_refineries }
				set_variable = { prev_hitech = num_of_high_tech_complexes }
				set_variable = { prev_silos = num_of_fuel_siloes }
				set_variable = { prev_coal_plants = sum_of_power_plants }
				set_variable = { prev_wind_farms = sum_of_wind_farms }
				set_variable = { prev_recycling = num_of_recycling_plants }
				set_variable = { prev_steel = num_of_steel_works }
				set_variable = { prev_farms = num_of_big_ass_farms }
				set_variable = { prev_temples = num_of_cathedrals }
				set_variable = { prev_universities = num_of_universities }
				set_variable = { prev_hospitals = num_of_hospitals }
				set_variable = { prev_prisons = num_of_prisons }
				set_variable = { prev_januszexes = num_of_januszexes }
				set_variable = { prev_ports = num_of_ports }
				set_variable = { prev_facilities = num_of_facilities }
				set_variable = { prev_reactors = num_of_reactors }
				set_variable = { prev_rockets = num_of_rockets }
				set_variable = { prev_dams = num_of_dams }
				set_variable = { prev_airbase = num_of_airbase }
				set_variable = { prev_supplyhub = num_of_supplyhub }
				set_variable = { prev_bunker = num_of_bunker }
				set_variable = { prev_stronghold = num_of_stronghold }
				set_variable = { prev_aa = num_of_aa }
				set_variable = { prev_radar = num_of_radar }	
			}
			recalculate_deposit_levels = yes
			THIS = {
			every_owned_state = {
				limit = {
					NOT = {
						is_core_of = ROOT
					}
					has_administration_modifier = yes
				}
				clear_administration_modifier = yes
			}
			every_owned_state = {
				limit = {
					NOT = {
						is_core_of = ROOT
						has_administration_modifier = yes
					}
				}
				setup_administration_modifier = yes
				coring_calculation = yes
			}
			}
		}
	}
}
