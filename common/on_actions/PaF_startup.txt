on_actions = {
	on_startup = {
		effect = {
			every_country = {
				limit = { has_idea = observer_country }
				add_offsite_building = { type = arms_factory level = 10 }
			}
			CAL = {
				scoped_play_song = "calisia"
			}

			ALP = {
				scoped_play_song = "legio"
			}
			SWC = {
				country_event = {
					id = swiecie.1
					days = 21
				}
			}
			BRZ = {
				create_other_teams = yes
			}			
			random_country = { #hoi znowu jest upośledzone i nie daje zrobić oskryptowanego efektu jak normalny koder by myślał
				create_arrays_of_needed_poland_states = yes
			}
			every_country = {
				limit = {
					is_ai = no
					OR = {
						tag = BOM
						tag = BPD
						tag = ARK
						
					}
				}
				set_country_flag = curse_of_piu
			}
			set_variable = {global.deadPolacks = 0}
			set_variable = {global.deadMilions = 0}
			set_variable = {global.deadPolacksFromPastWars = 0}
			every_country = {
				limit = {
					has_idea = podlasie_tribe_idea
					}
					
				load_focus_tree = blank_tree
			}
			every_country = {
				limit = {
					NOT = {
						has_tech = industry_revival
					}
				}
				set_variable = {active_workshops = 0}
				set_variable = {workshops_count = 0}
			}
			#podlasie	
			add_to_array = { global.podlasie_tribes = TNO }
			add_to_array = { global.podlasie_tribes = COL }
			add_to_array = { global.podlasie_tribes = ZAM }
			add_to_array = { global.podlasie_tribes = HMA }
			add_to_array = { global.podlasie_tribes = WIL }
			add_to_array = { global.podlasie_tribes = UHL }
			add_to_array = { global.podlasie_tribes = DRO }
			add_to_array = { global.podlasie_tribes = ZAB }
			add_to_array = { global.podlasie_tribes = SUP }
			add_to_array = { global.podlasie_tribes = GRO }
			add_to_array = { global.podlasie_tribes = TYK }
			add_to_array = { global.podlasie_tribes = OSO }
			add_to_array = { global.podlasie_tribes = DAM }
			add_to_array = { global.podlasie_tribes = BRD }
			add_to_array = { global.podlasie_tribes = AUG }
			add_to_array = { global.podlasie_tribes = SEI }
			add_to_array = { global.podlasie_tribes = RAJ }
			#warmia
			add_to_array = { global.rightful_warmia_clay = 40}
			add_to_array = { global.rightful_warmia_clay = 42}
			add_to_array = { global.rightful_warmia_clay = 46}
			add_to_array = { global.rightful_warmia_clay = 47}
			add_to_array = { global.rightful_warmia_clay = 51}
			add_to_array = { global.rightful_warmia_clay = 632}
			add_to_array = { global.rightful_warmia_clay = 875}
		
			
			every_state = {
				set_variable = { coring_cost = state_population_k }
				multiply_variable = { coring_cost = 0.6 }
				round_variable = coring_cost
				clamp_variable = {
					var = coring_cost
					max = 200
				}
			}
			every_country = {
				set_variable = { coreable_number = 0}
				set_variable = { rare_buildings_divider = 20 }
				set_variable = {
					var = doctrines_researched
					value = 0
				}
				count_buildings = yes
				calculate_energy_balance = yes
				public_buildings_effect = yes
				get_taxes = yes
				set_variable = { global.PaF_Opening_Screen = 1 }
				if ={
					limit = {
						is_poland_unifier = yes
						is_ai = yes
					}
					add_ideas = fucking_ai
				}
				if = {
					limit = {
						is_upper_silesia = yes
						is_ai = yes
					}
					add_ideas = silesia_minor_surrender
				}
				if = {
					limit = {
						is_upper_silesia = yes
						is_ally_with = CHO
					}
					add_ideas = member_of_silesian_league
				}				
			}
			if = {
				limit = {
					CRN = {
						is_ai = yes
					}
					PUL = {
						is_ai = yes
					}
					KSN = {
						is_ai = yes
					}
					SWD = {
						is_ai = yes
					}
					LEN = {
						is_ai = yes
					}
					ZUK = {
						is_ai = yes
					}
					BIL = {
						is_ai = yes
					}
					BPD = {
						is_ai = yes
					}
					TEN = {
						is_ai = yes
					}
				}
				CRN = {
					lubelskie_starting_buffs = yes
				}
			}
			PRK = {
				set_country_flag = ziobro_start_war
				activate_mission = ziobro_holy_war
				country_event = {
					id = ziobro.16
					days = 1 
					}
			}
			FRA = {
				country_event = {
					id = fluff_france.1
					days = 55
				}
				diplomatic_relation = {
					country = GER
					relation = non_aggression_pact
					active = yes
				}
			}
			EKS = {
				country_lock_all_division_template = yes
				country_event = {
					id = eksrozpad.1
					days = 160 
					}
				country_event = {
					id = eks.1
					days = 1 
					}
			}			
			EKW = {
				country_lock_all_division_template = yes
				country_event = {
					id = ekwrozpad.1
					days = 180
					}
				country_event = {
					id = ekw.3
					days = 1 
					}
			}
			DGR = {
				if = {
					limit = {
						 is_ai = yes 
						}
					DGR_ai_army = yes
					remove_ideas = DGR_district_wars
				}
			}
			GDA = {
				country_lock_all_division_template = yes
				country_event = {
					id = gdarozpad.1
					days = 194 
					}
				country_event = {
					id = wmg.1
					days = 1 
				}
			}
			CAL = {
				286 = {
					add_dynamic_modifier = {
							modifier = CAL_ager_publicus_modifier
						}
				}
				688 = {
					add_dynamic_modifier = {
							modifier = CAL_ager_publicus_modifier
						}
				}
			}
			POZ = {
				country_lock_all_division_template = yes
				country_event = {
					id = pozrozpad.1
					days = 188
					}
				country_event = {
					id = pozrozpad.2
					days = 201
					}
				country_event = {
					id = poz.1
					days = 1
					}
			}
			KSZ = {
				country_lock_all_division_template = yes
				country_event = {
					id = kszrozpad.1
					days = 190 
					}
				country_event = {
					id = kaszub.1
					days = 1 
					}
			}
			RZE = {
				country_event = {
					id = rzeszow_siege.1
					days = 14
					}
			}
			OSW = {
				add_to_war = { 
					targeted_alliance = PRK 
					enemy = SND 
					hostility_reason = asked_to_join
				}
				add_to_war = { 
					targeted_alliance = PRK 
					enemy = STA
					hostility_reason = asked_to_join
				}
			}
			CHW = {
				add_to_war = { 
					targeted_alliance = PRK 
					enemy = SND 
					hostility_reason = asked_to_join
				}
				add_to_war = { 
					targeted_alliance = PRK 
					enemy = STA
					hostility_reason = asked_to_join
				}
			}
			BBW = {
				set_variable = { energy_exported = 0 }
				set_variable = { ideological_factor = 1}
				every_neighbor_country = {
					set_variable = { energy_imported = 0 }
				}
				BBW_calculate_smog_penalties = yes
				every_state = {
					limit = {
						is_owned_by = BBW
					}
					add_dynamic_modifier = {
						modifier = BBW_smog_effect
					}
				}
				country_event = {
					id = belchatow.101
					days = 278 
					}
			}
			WML = {
				if = {
					limit = { WML = { is_ai = yes } }
					load_focus_tree = WML_festung_lodzig
					}
				else = {
					load_focus_tree = holownia_focus
					}
			}
			SAP = {
				if = {
					limit = {
						tag = SAP
						NOT = { is_ai = yes }
					} 
					BBW = { set_cosmetic_tag = BBW_witcher }
					ZHP = { set_cosmetic_tag = ZHP_witcher }
					ZYD = { set_cosmetic_tag = ZYD_witcher }
					KRS = { set_cosmetic_tag = KRS_witcher }				
					WML = { set_cosmetic_tag = WML_witcher }		
					ZON = { set_cosmetic_tag = ZON_witcher }
					LKS = { set_cosmetic_tag = LKS_witcher }
					RDM = { set_cosmetic_tag = RDM_witcher }
					AMW = { set_cosmetic_tag = AMW_witcher }
					TIG = { set_cosmetic_tag = TIG_witcher }
					POG = { set_cosmetic_tag = POG_witcher }
					RUT = { set_cosmetic_tag = RUT_witcher }
					KAR = { set_cosmetic_tag = KAR_witcher }
				}
			}
			ZHP = {
				hidden_effect = {
					set_variable = { ZHP_deurbanization_progress = 0 }
				}
			}
			MNI = {
				country_lock_all_division_template = yes
				country_event = {
					id = niemcy.1
					days = 1 
				}
				MNI_activate_mechanic = yes
			}
			KES = {
				delete_eurokom_templates = yes
				if = {
					limit = { 
						any_country = {
							AND = {
							is_southern_greater_poland = yes
							is_ai = no
							}
							}
						}
					KES = { load_oob = "KES_2027" }
					else = { KES = { load_oob = "KES_2027_AI" } }
				}
			}
		}

	}
	on_daily = {
		effect = {
			calculate_energy_balance = yes
			if = {
				limit = {
					date > "2033.01.01"
					is_ai = yes
				}
				add_ideas = fasterfasterfaster
			}
			if = {
				limit = {
					OR = {
						has_country_flag = unified_voivodeship
						has_country_flag = unified_regional
					}
				}
				count_voi_ownership = yes
			}
			
			set_temp_variable = { coreable_temp = 0}
			every_owned_state = {
				limit = {
					NOT = { is_core_of = ROOT }
					compliance > 75
					check_variable = {
						THIS.coring_cost < ROOT.political_power
					}
				}
				add_to_temp_variable = { coreable_temp = 1}
			}
			set_variable = {coreable_number = coreable_temp }
			every_owned_state = {
				limit = {
					NOT = { is_core_of = ROOT }
					compliance > 90
				}
				auto_coring_effect = yes
			}
			every_owned_state = {
				limit = {
					NOT = { is_core_of = ROOT }
					NOT = { is_in_array = { ROOT.noncores_array = THIS.id } }
				}
				add_to_array = { ROOT.noncores_array = THIS.id }
			}
			every_owned_state = {
				limit = {
					is_core_of = ROOT 
					is_in_array = { ROOT.noncores_array = THIS.id } 
				}
				remove_from_array = { ROOT.noncores_array = THIS.id }
			}
			every_state = {
				limit = {
					is_in_array = { ROOT.noncores_array = THIS.id }
					NOT = {
						is_owned_by = ROOT
					}
				}
				remove_from_array = { ROOT.noncores_array = THIS.id }
			}
			set_variable = {ROOT.noncores_count = 0}
			for_each_loop = {
				array = ROOT.noncores_array
				add_to_variable = {ROOT.noncores_count = 1}
			}
			if = {
				limit = {
					check_variable = { ROOT.noncores_count < 1 }
					has_dynamic_modifier = {
						modifier = non_core_penalty
					}
				}
				remove_dynamic_modifier = {
					modifier = non_core_penalty
				}
			}
			else = {
				set_variable = { root.non_core_penalty_value = ROOT.noncores_count}
				multiply_variable = { root.non_core_penalty_value = -0.01 }
				if = {
					limit = {
						NOT = {
							has_dynamic_modifier = {
								modifier = non_core_penalty
							}
						}
					}
					add_dynamic_modifier = {
						modifier = non_core_penalty
					}
				}
			}
			if = {
				limit = {
					has_war = yes
					has_country_flag = getting_ready_to_war
				}
				clr_country_flag = getting_ready_to_war
			}
			count_buildings = yes
			public_buildings_effect = yes
		}
	}
	on_daily_CAL = {
		effect = {
			if = {
				limit = {
					has_country_flag = {
						flag = CAL_senate_voting_started
						days > 17
					}
					NOT = {
						has_country_flag = CAL_senate_military_made_a_move
					}
				}
				CAL_senate_military_moves = yes
				CAL_clamp_on_loyalty_and_gravitas = yes
				set_country_flag = CAL_senate_military_made_a_move
			}
			CAL_count_units_allegiance = yes
			if = {
				limit = {
					has_country_flag = CAL_senate_opened
				}
				CAL_set_civilian_loyalty_effects = yes
			}
			if = {
				limit = {
					OR = {
						has_idea = CAL_legiones_rebellious
						has_idea = CAL_legiones_disloyal
						has_idea = CAL_legiones_hesistant
						has_idea = CAL_legiones_loyal
						has_idea = CAL_legiones_fanatical
					}
				}
				CAL_set_military_loyalty_effects = yes
			}
			if = {
				limit = {
					is_ai = no
				}
				set_variable = {
					global.unifiers_count = 0
				}
				for_each_scope_loop = {
					array = global.countries
					if = {
						limit = {
							exists = yes
							is_poland_unifier = yes
						}
						add_to_variable = {
							global.unifiers_count = 1
						}
					}
				}
				if = {
					limit = {
						check_variable = {
							global.unifiers_count = 2
						}
					}
					country_event = {
						id = calisia.52
						days = 7
					}
				}
				
			}
			if = {
				limit = {
					NOT = {
						has_country_flag = CAL_praetorians_will_remember_that
					}
				}
				if = {
					limit = {
						check_variable = {
							CAL_praetoriae_loyalty > 30
						}
					}
					set_country_flag = CAL_praetorians_will_remember_that
				}
				#log = "Praetorians will remember that..."
			}
		}
	}
	on_daily_HNN = {
		effect = {
			if = {
				limit = {
					num_divisions < 300
					NOT = {
						has_country_flag = STOP_SPAMMING
					}
				}
				capital_scope = {
					create_unit = {
						division = "division_template = \"Huńscy łupieżcy\""
						owner = HNN
					}
				}
			}
			else = {
				set_country_flag = STOP_SPAMMING
			}
		}
	}
	on_daily_EKS = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}
	on_daily_EKW = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}
	on_daily_TOU = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}
	on_daily_BRG = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}
	on_daily_BOG = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}
	on_daily_KLB = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				every_controlled_state = {
					meta_effect = {	
						text = {
							THIS = {
								set_state_name = STATE_[STATE_ID]
							}
						}
						STATE_ID = "[?THIS.GetID]"
					}
				}
			}
		}
	}	
	on_weekly_SWE = {
		effect = {
			if = {
				limit = {
					date > 2037.09.01
					NOT = {
						has_global_flag = CAL_jutes_spawned
					}
					JOM = {
						exists = no
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_jutes = yes
			}
			if = {
				limit = {
					date > 2037.10.01
					NOT = {
						has_global_flag = CAL_ostrogoths_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_ostrogoths = yes
			}
			if = {
				limit = {
					date > 2037.11.01
					NOT = {
						has_global_flag = CAL_franks_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_franks = yes
			}
			if = {
				limit = {
					date > 2037.12.01
					NOT = {
						has_global_flag = CAL_visigoths_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_visigoths = yes
			}
			if = {
				limit = {
					date > 2038.01.01
					NOT = {
						has_global_flag = CAL_saxons_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_saxons = yes
			}
			if = {
				limit = {
					date > 2038.02.01
					NOT = {
						has_global_flag = CAL_vandals_spawned
					}
					CAL = {
						is_ai = no
					}
					WAN = {
						exists = no
					}
				}
				CAL_spawn_vandals = yes
			}
			if = {
				limit = {
					date > 2038.03.01
					NOT = {
						has_global_flag = CAL_estes_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_estes = yes
			}
			if = {
				limit = {
					date > 2038.04.01
					NOT = {
						has_global_flag = CAL_huns_spawned
					}
					CAL = {
						is_ai = no
					}
					KON = {
						exists = no
					}
				}
				CAL_spawn_huns = yes
			}
			if = {
				limit = {
					date > 2038.05.01
					NOT = {
						has_global_flag = CAL_scythians_spawned
					}
					CAL = {
						is_ai = no
					}
				}
				CAL_spawn_scythians = yes
			}
			# if = {
			# 	limit = {
			# 		date > 2038.06.01
			# 		NOT = {
			# 			has_global_flag = CAL_spartakus_risen
			# 		}
			# 		CAL = {
			# 			is_ai = no
			# 		}
			# 	}
			# 	CAL_spawn_slave_revolt = yes
			# }
			set_variable = { global.deadPolacksFromLastTick = global.deadPolacks}
			set_temp_variable = { global.tempDeadPolacks = 0}
			every_country = {
				limit = {
					NOT = {
						original_tag = ROS
						original_tag = UPA
						original_tag = UHR
					}
				}
				add_to_temp_variable = { global.tempDeadPolacks = THIS.casualties_k}
				add_to_temp_variable = { global.tempDeadPolacks = THIS.casualtiesFromEvents}
			}
			add_to_temp_variable = { global.tempDeadPolacks = global.deadPolacksFromPastWars }
			add_to_temp_variable = { global.tempDeadPolacks = global.deadPolacksFromDeadNations }
			if = {
				limit = {
					check_variable = { global.tempDeadPolacks < 1}
				}
				set_variable = {global.deadPolacksSmall = global.tempDeadPolacks} 
				multiply_variable = {global.deadPolacksSmall = 1000}
			}
			set_variable = {global.deadPolacks = global.tempDeadPolacks}
			set_variable = {global.deadMillions = global.deadPolacks}
			divide_variable = {global.deadMillions = 1000}
			if = {
				limit = {
					check_variable = {
						global.deadPolacksFromLastTick > global.deadPolacks
					}
				}
				log = "[GetDateText]: WARNING - SOMETHING IS FUKED UP"
				log = "current wars + [?global.deadPolacksFromDeadNations] + [?global.deadPolacksFromPastWars]  = [?global.deadPolacks]"
			}
		}
	}
	on_weekly_ZHP = {
		effect = {
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress < 25}
				}
				swap_ideas = {
					remove_idea = ZHP_deurban2
					add_idea = ZHP_deurban1
				}
			}
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress > 24}
					has_idea = ZHP_deurban1
				}
				swap_ideas = {
					remove_idea = ZHP_deurban1
					add_idea = ZHP_deurban2
				}
			}
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress < 50}
					has_idea = ZHP_deurban3
				}
				swap_ideas = {
					remove_idea = ZHP_deurban3
					add_idea = ZHP_deurban2
				}
			}
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress > 49}
					has_idea = ZHP_deurban2
				}
				swap_ideas = {
					remove_idea = ZHP_deurban2
					add_idea = ZHP_deurban3
				}
			}
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress < 75}
					has_idea = ZHP_deurban4
				}
				swap_ideas = {
					remove_idea = ZHP_deurban4
					add_idea = ZHP_deurban3
				}
			}
			if = {
				limit = {
					check_variable = { ZHP_deurbanization_progress > 74}
					has_idea = ZHP_deurban3
				}
				swap_ideas = {
					remove_idea = ZHP_deurban3
					add_idea = ZHP_deurban4
				}
			}
			if = {
				limit = {
					has_country_flag = applied_the_final_solution
				}
				set_temp_variable = { days_after_last_fs = global.num_days}
				log = "[?appliance_date]"
				log = "[?days_after_last_fs]"
				subtract_from_temp_variable = {days_after_last_fs = appliance_date}
				log = "[?days_after_last_fs]"
				if = {
					limit = {
						check_variable = {
							var = days_after_last_fs
							value = 365
							compare = greater_than_or_equals
						}
					}
					clr_country_flag = applied_the_final_solution
				}
			}
		}
	}
	on_monthly = {
		effect = {
			get_taxes = yes
		}
	}
	on_monthly_ZHR = {
		effect = {
			if = {
				limit = {
					has_character = ZHP_marek_jedraszewski
					NOT = {
						has_country_leader = {
							character = ZHP_marek_jedraszewski
							ruling_only = yes
						}
					}
				}
				retire_country_leader = yes
				add_country_leader_role = {
					character = ZHP_marek_jedraszewski
					promote_leader = yes
					country_leader = {
						ideology = paternal_conservatism_subtype
						expire="1.1.1.1"
						id = -1
					}
				}
			}
		}
	}
	
	on_monthly_GFL = {
		effect = {
			if = {
				limit = {
					has_character = ZHP_orsza
					NOT = {
						has_country_leader = {
							character = ZHP_orsza
							ruling_only = yes
						}
					}
				}
				retire_country_leader = yes
				add_country_leader_role = {
					character = ZHP_orsza
					country_leader = {
						ideology = scout_system_subtype
						expire="1.1.1.1"
						id = -1
					}
				}
			}
		}
	}
	
	on_monthly_CAL = {
		effect = {
			if = {
				limit = {
					NOT = {
						has_country_flag = CAL_senate_closed_due_to_grmans
					}
				}
				if = {
					limit = {
						check_variable = {
							var = CAL_emperor_gravitas
							value = 160
							compare = greater_than_or_equals
						}
					}
					subtract_from_variable = {
						CAL_legiones_loyalty = 1
					}
					subtract_from_variable = {
						CAL_populares_loyalty = 1
					}
					subtract_from_variable = {
						CAL_praetoriae_loyalty = 1
					}
					subtract_from_variable = {
						CAL_optimates_loyalty = 1
					}
				}
				if = {
					limit = {
						check_variable = {
							CAL_populares_percentage > 0.6
						}
					}
					subtract_from_variable = {
						CAL_optimates_loyalty = 1
					}
				} 
				else_if = {
					limit = {
						check_variable = {
							CAL_populares_percentage < 0.4
						}
					}
					subtract_from_variable = {
						CAL_populares_loyalty = 1
					}
				}
				# if = {
				# 	limit = {
				# 		check_variable = {
				# 			CAL_emperor_gravitas < CAL_populares_gravitas
				# 		}
				# 	}
				# 	subtract_from_variable = {
				# 		CAL_populares_loyalty = 2
				# 	}
				# }
				# if = {
				# 	limit = {
				# 		check_variable = {
				# 			CAL_emperor_gravitas < CAL_praetoriae_gravitas
				# 		}
				# 	}
				# 	subtract_from_variable = {
				# 		CAL_praetoriae_loyalty = 2
				# 	}
				# }
				# if = {
				# 	limit = {
				# 		check_variable = {
				# 			CAL_emperor_gravitas < CAL_optimates_gravitas
				# 		}
				# 	}
				# 	subtract_from_variable = {
				# 		CAL_optimates_loyalty = 2
				# 	}
				# }
				# if = {
				# 	limit = {
				# 		check_variable = {
				# 			CAL_emperor_gravitas < CAL_legiones_gravitas
				# 		}
				# 	}
				# 	subtract_from_variable = {
				# 		CAL_legiones_loyalty = 2
				# 	}
				# }
				#loyalty-bonus-populare
				if ={
					limit = {
						check_variable = {
							var = CAL_populares_loyalty
							value = 15
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_populares_gravitas = 5
					}
				}
				else_if = {
					limit = {
						check_variable = {
							var = CAL_populares_loyalty
							value = 30
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_populares_gravitas = 3
					}
				}
				else_if = {
					limit = {
						check_variable = {
							CAL_populares_loyalty > 80
						}
						check_variable = {
							var = CAL_populares_loyalty
							value = 90
							compare = less_than_or_equals
						}
					}
					subtract_from_variable =  {
						CAL_populares_gravitas = 1
					}
				}
				else = {
					subtract_from_variable =  {
						CAL_populares_gravitas = -3
					}
				}
				#loyalty-bonus-optimate
				if ={
					limit = {
						check_variable = {
							var = CAL_optimates_loyalty
							value = 15
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_optimates_gravitas = 5
					}
				}
				else_if = {
					limit = {
						check_variable = {
							var = CAL_optimates_loyalty
							value = 30
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_optimates_gravitas = 3
					}
				}
				else_if = {
					limit = {
						check_variable = {
							CAL_optimates_loyalty > 80
						}
						check_variable = {
							var = CAL_optimates_loyalty
							value = 90
							compare = less_than_or_equals
						}
					}
					subtract_from_variable =  {
						CAL_optimates_gravitas = 1
					}
				}
				else = {
					subtract_from_variable =  {
						CAL_optimates_gravitas = -3
					}
				}
				#loyalty-bonus-legiones
				if ={
					limit = {
						check_variable = {
							var = CAL_legiones_loyalty
							value = 15
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_legiones_gravitas = 5
					}
				}
				else_if = {
					limit = {
						check_variable = {
							var = CAL_legiones_loyalty
							value = 30
							compare = less_than_or_equals
						}
					}
					add_to_variable = {
						CAL_legiones_gravitas = 3
					}
				}
				else_if = {
					limit = {
						check_variable = {
							CAL_legiones_loyalty > 80
						}
						check_variable = {
							var = CAL_legiones_loyalty
							value = 90
							compare = less_than_or_equals
						}
					}
					subtract_from_variable =  {
						CAL_legiones_gravitas = 1
					}
				}
				else = {
					subtract_from_variable =  {
						CAL_legiones_gravitas = -3
					}
				}
				#loyalty-bonus-preatoriae
				if= {
					limit = {
						NOT = {
							has_country_flag = CAL_praetorians_banned
						}
					}
					if ={
						limit = {
							check_variable = {
								var = CAL_praetoriae_loyalty
								value = 15
								compare = less_than_or_equals
							}
						}
						add_to_variable = {
							CAL_praetoriae_gravitas = 5
						}
					}
					else_if = {
						limit = {
							check_variable = {
								var = CAL_praetoriae_loyalty
								value = 30
								compare = less_than_or_equals
							}
						}
						add_to_variable = {
							CAL_praetoriae_gravitas = 3
						}
					}
					else_if = {
						limit = {
							check_variable = {
								CAL_praetoriae_loyalty > 80
							}
							check_variable = {
								var = CAL_praetoriae_loyalty
								value = 90
								compare = less_than_or_equals
							}
						}
						subtract_from_variable =  {
							CAL_praetoriae_gravitas = 1
						}
					}
					else = {
						subtract_from_variable =  {
							CAL_praetoriae_gravitas = -3
						}
					}
				}
				
				CAL_clamp_on_loyalty_and_gravitas = yes
			}
			
		}
		
	}	
	# on_monthly_CZE = {
	# 	effect = {
	# 		if = {
	# 			limit = {
	# 				has_country_leader = {
	# 					character = CZE_tomio_okamura
	# 					ruling_only = yes
	# 				}
	# 			}
	# 		}
	# 	}
	# }
	on_monthly_EKS = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				reset_vp_name = yes
			}
		}
	}
	on_monthly_EKW = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				reset_vp_name = yes
			}
		}
	}
	on_monthly_TOU = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				reset_vp_name = yes
			}
		}
	}
	on_monthly_BRG = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				reset_vp_name = yes
			}
		}
	}
	on_monthly_BOG = {
		effect = {
			if = {
				limit = {
					has_country_flag = eurokom_has_fallen
				}
				reset_vp_name = yes
			}
		}
	}	
	on_weekly_BBW = {
		effect = {
			every_owned_state = {
				limit = {
					NOT = {
						has_dynamic_modifier = {
							modifier = BBW_smog_effect
						}
					}
					any_neighbor_state = {
						has_dynamic_modifier = {
							modifier = BBW_smog_effect
						}
					}
				}
				add_dynamic_modifier = {
					modifier = BBW_smog_effect
				}
			}
			BBW_calculate_smog_penalties = yes
		}
	}
	on_daily_ATM = {
		effect = {
			if = {
				limit = {
					has_completed_focus = ATM_green_fury
					has_completed_focus = ATM_suffocating_smoke
					has_completed_focus = ATM_black_eagle
					has_completed_focus = ATM_hearts_and_minds
					NOT = {
						has_completed_focus = ATM_at_least_fair_trial
						has_completed_focus = ATM_captain_planet
						has_completed_focus = ATM_rad_eaters
						has_completed_focus = ATM_knowledge_is_death_of_fear
					}
					OR ={
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@autocracy
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@corporativism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@euroliberalism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@freemarketism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@marxism_cranism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@neonationalism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@postpolonism
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@reactionary
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@socialdemocrature
						}
						check_variable = {
							var:party_popularity@paternal_conservatism < var:party_popularity@squattism
						}
					}
					NOT = {
						has_active_mission = ATM_brewing_tensions
					}
				}
				activate_mission = ATM_brewing_tensions
			}
		}
	}
	on_weekly_ATM = {
		effect = {
			if = {
				limit = {
					NOT = {
						has_country_flag = fought_the_smog
					}
				}
				every_owned_state = {
					limit = {
						NOT = {
							has_dynamic_modifier = {
								modifier = BBW_smog_effect
							}
						}
						any_neighbor_state = {
							has_dynamic_modifier = {
								modifier = BBW_smog_effect
							}
						}
					}
					add_dynamic_modifier = {
						modifier = BBW_smog_effect
					}
				}
			}	
			BBW_calculate_smog_penalties = yes
		}
	}	
	on_monthly_BEX = {
		effect = {
			damage_units = {
				damage = 0.05
			}
		}
	}
	on_declare_war = {
		effect = {
			log = "[?From.casualties] - [?ROOT.casualties_k]"
			if = {
				limit = {
					FROM = {
						has_country_flag = getting_ready_to_war
					}
				}
				FROM = {
					clr_country_flag = getting_ready_to_war
				}
			}
			if = {
				limit = {
					ROOT = {
						has_country_flag = getting_ready_to_war
					}
				}
				ROOT = {
					clr_country_flag = getting_ready_to_war
				}
			}
			if = {
				limit = {
					FROM = { tag = BBW }
					has_country_flag = importing_energy
				}
				clr_country_flag = importing_energy
				remove_opinion_modifier = {
					target = BBW
					modifier = aided_industry
				}
				remove_ideas = importing_energy_idea
				subtract_from_variable = {energy_imported = 750}
				BBW = {
					add_offsite_building = {
						type = industrial_complex
						level = -1
					}
					if = {
						limit = {
							check_variable = { energy_exported > 0 }
						}
						subtract_from_variable = {energy_exported = 750}
					}
				}
				log = "[GetDateText]: [ROOT.GetName] cancels energy imports"
			}
			if = {
				limit = {
					tag = BBW
					FROM = { has_country_flag = importing_energy }
				}
				FROM = {
					clr_country_flag = importing_energy
					remove_opinion_modifier = {
						target = BBW
						modifier = aided_industry
					}
					remove_ideas = importing_energy_idea
					subtract_from_variable = {energy_imported = 750}
				}
				BBW = {
					add_offsite_building = {
						type = industrial_complex
						level = -1
					}
					if = {
						limit = {
							check_variable = { energy_exported > 0 }
						}
						subtract_from_variable = {energy_exported = 750}
					}
				}
				log = "[GetDateText]: [FROM.GetName] cancels energy imports"
			}
		}
	}

	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					OR = {
						original_tag = ALP
						original_tag = PRT
						original_tag = CAL
						AND = {
							original_tag = KLO
							is_subject_of = CAL
						}
					}
				}
				if = {
					limit = {
						original_tag = CAL
						has_country_flag = CAL_central_imperial_department
						FROM.FROM = {
							NOT = {
								is_core_of = CAL
							}
						}
					}
					multiply_variable = {
						FROM.FROM.coring_cost = 0.8
					}
					round_variable = FROM.FROM.coring_cost
				}
			}
			else_if = {
				limit = {
					OR = {
						original_tag = EKS
						original_tag = EKW
						original_tag = TOU
						original_tag = BOG
						original_tag = KLB
						original_tag = BRG
					}
					has_country_flag = eurokom_has_fallen
				}
				meta_effect = {
					text = {
						FROM.FROM = {
							set_state_name = STATE_[STATE_ID]
						}
					}
					STATE_ID = "[?FROM.FROM.GetID]"
				}
			}
			if = {
				limit = {
					FROM = {
						original_tag = CAL
						has_country_flag = CAL_central_imperial_department
					}
					FROM.FROM = {
						NOT = {
							is_core_of = CAL
						}
					}
				}
				divide_variable = {
					FROM.FROM.coring_cost = 0.8
				}
				round_variable = FROM.FROM.coring_cost
			}
		}
	}
	on_unit_leader_promote_from_ranks_veteran = {
		effect = {
			if = {
				limit = {
					OWNER = {
						original_tag = CAL
					}
				}
				ROOT = {
					random_list = {
						50 = {
							add_unit_leader_trait = popular
						}
						50 = {
							add_unit_leader_trait = optimate
						}
					}
					random_list = {
						50 = {
							add_unit_leader_trait = praetorian
						}
						50 = {
							add_unit_leader_trait = legionarius
						}
					}
				}
			}
		}
	}
	on_unit_leader_promote_from_ranks_green = {
		effect = {
			if = {
				limit = {
					OWNER = {
						original_tag = CAL
					}
				}
				ROOT = {
					random_list = {
						50 = {
							add_unit_leader_trait = popular
						}
						50 = {
							add_unit_leader_trait = optimate
						}
					}
					random_list = {
						50 = {
							add_unit_leader_trait = praetorian
						}
						50 = {
							add_unit_leader_trait = legionarius
						}
					}
				}
			}
		}
	}
}
